[components]
; specify modules that contain components that implment any of
; the interfaces from gds.burp.api (i.e., INewScanIssueHandler,
; IRepeaterRequestHandler, etc)
;
; ex.
; myplugins.test.TestPlugin = enabled
; myplugins.blah.* = enabled
;
; note: all components in a module will be imported, not just
; the class specified. In order to use a component to process
; requests or responses for specific tools, i.e., Component's
; that implement an interface to hook a specific tool's request
; or response (from BurpExtender.processHttpMessage), the
; component needs to be specified exactly by class under an
; option name in the [handlers] section in the format of:
;
; [handlers]
; toolname.(request|response) = Plugin1, Plugin2, ...
;

[menus]
; specify the module and class name you want enabled here
;
; ex.
; module.containing.menus.YourMenuItem = enabled
;
; or you can specify a wildcard to register all classes within
; a module that implements the IMenuItemHandler interface.
;
; ex.
; module.containing.menus.* = enabled
;
gds.burp.menu.console.ConsoleMenu = enabled

; to enable the following, you must init the burp-extensions submodule
;gds.burpext.jsonmenu.* = enabled

[handlers]
; specify the plugin classes you want enabled for each tool
; request or response (similar to Java filter chain's).
;
; ex.
; proxy.request = FuzzSomeHeaderPlugin, ManipulateRangeHeader
; proxy.response = RemoveJSInputValidationPlugin
; intruder.request = EncodeSomeValuePlugin, ManipulateRangeHeader
; intruder.response = LogResponsePlugin
;
; In the above examples, only those plugins specified for each
; tool will be called when a request or response is received AND
; implements the appropriate Interface methods.
;
; see code in `gds.burp.dispatchers.PluginDispatcher` for details
; on how this works.
;
intruder.request = 
intruder.response = 
proxy.request = 
proxy.response = 
repeater.request = 
repeater.response = 
scanner.request = 
scanner.response = 
sequencer.request = 
sequencer.response = 
spider.request = 
spider.response = 
target.request = 
target.response = 
